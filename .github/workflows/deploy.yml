name: Terraform Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorpThe job failed due to the absence of the `tfplan` file/setup-terraform@v3
        with:
          terraform_version: 1.11.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v, which is essential for the `terraform apply` step4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets. Here are a few steps to resolve this issue:

1. **Ensure Terraform Plan Generation:**
   Ensure that.AWS_REGION }}

      - name: Output Terraform Version the `terraform plan -out=tfplan` step successfully generates the `tfplan` file. You can add error handling to check if the `tfplan` file exists after the plan step.

2. **Check Plan Step:**
   Verify the `terraform
        run: terraform -version

      - name: Terraform Init
        run: terraform init

      - name: Validate Terraform Configuration plan` step in the workflow to ensure it completes
        run: terraform validate

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Plan
 successfully. Add a step to list the files in the        run: terraform plan -out=tfplan

      - name: List Directory Contents (Post-Plan)
        run: ls -l

      - name: Terraform Apply
        if: github.ref directory to confirm the presence of `tfplan`.

Here == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

      - name: List Directory Contents (Post-Apply)
        run: ls -l

      - name: is an updated version of your workflow file with enhanced Show Terraform Logs
        if: failure() # Only runs if a step fails
        run: |
          echo "Terraform Plan Output:"
          cat tfplan || error handling:

```yaml
name: Terraform Deployment echo "No tfplan file found"
          echo "Terraform Apply Output:"
          terraform show -no-color tfplan || echo "Failed to generate logs"
